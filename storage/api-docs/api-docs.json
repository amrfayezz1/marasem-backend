{
    "openapi": "3.0.0",
    "info": {
        "title": "Marasem API",
        "description": "This API supports social media login with Google, Facebook, and Behance. Users are redirected to the provider's login page and upon successful authentication, they are logged into the app and issued a token.",
        "contact": {
            "email": "amrfayez.247@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local development server for API routes"
        },
        {
            "url": "http://localhost:8000",
            "description": "Local development server for Web routes"
        },
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/add-address": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Add a new address for the authenticated user",
                "operationId": "6b5169034a08e2084b2ad42035275e1c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city",
                                    "zone",
                                    "address"
                                ],
                                "properties": {
                                    "city": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Cairo"
                                    },
                                    "zone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Downtown"
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main St"
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John's Office",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "+1234567890",
                                        "nullable": true
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 5,
                                        "example": "+20",
                                        "nullable": true
                                    },
                                    "is_default": {
                                        "description": "Set as default address",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Cairo"
                                        },
                                        "zone": {
                                            "type": "string",
                                            "example": "Downtown"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John's Office",
                                            "nullable": true
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890",
                                            "nullable": true
                                        },
                                        "country_code": {
                                            "type": "string",
                                            "example": "+20",
                                            "nullable": true
                                        },
                                        "is_default": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/addresses/{id}": {
            "put": {
                "tags": [
                    "Address"
                ],
                "summary": "Update an existing address",
                "operationId": "46a5db4761fba5463c3510212d68b8ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the address to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Giza",
                                        "nullable": true
                                    },
                                    "zone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Dokki",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "456 Elm St",
                                        "nullable": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John's Apartment",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "+201234567890",
                                        "nullable": true
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 5,
                                        "example": "+20",
                                        "nullable": true
                                    },
                                    "is_default": {
                                        "description": "Set as default address",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address updated successfully."
                                        },
                                        "address": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Address"
                ],
                "summary": "Delete an address",
                "operationId": "7d0377e79c03534675ea7ce1b91c86e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the address to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Address not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artists": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Get a list of artists",
                "operationId": "bcf9453d4eb5717e1220304e5becb87c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by artist's name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Filter by tag IDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 1
                            }
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by specific field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "followers",
                                "appreciations",
                                "profile_views"
                            ],
                            "example": "followers"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of artists per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artists retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArtistDetail"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/artists/{id}/follow": {
            "post": {
                "tags": [
                    "Artists"
                ],
                "summary": "Follow an artist",
                "operationId": "4e85e4c441e312128542f7b469e973ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist to follow",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist followed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist followed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found"
                    },
                    "400": {
                        "description": "Cannot follow the artist"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artists/{id}/unfollow": {
            "post": {
                "tags": [
                    "Artists"
                ],
                "summary": "Unfollow an artist",
                "operationId": "77070dc03a409ab44eac24354d7ebf4f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist to unfollow",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist unfollowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist unfollowed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artists/{id}": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Get detailed information about an artist",
                "operationId": "9746dc98c05ad6087ae4bb50ab0f1678",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "artist": {
                                            "$ref": "#/components/schemas/ArtistDetail"
                                        },
                                        "artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "liked_artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "sold_out_artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "artwork_views": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "appreciations": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                }
            }
        },
        "/customized-orders/{id}/respond": {
            "post": {
                "tags": [
                    "Artists"
                ],
                "summary": "Respond to a customized order",
                "operationId": "921276dfcc59914b4bd0b434edbe2ee7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customized order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "accept",
                                            "reject"
                                        ],
                                        "example": "accept"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response to the customized order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customized order accepted successfully."
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Customized order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/general-info": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the general information of the artist",
                "operationId": "e15b067d7993aa1e601f423a3b3ffb61",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "country_code",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "example": "+1"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123",
                                        "nullable": true
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "General information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "General information updated successfully."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/about-me": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the artist's About Me section",
                "operationId": "8d48d811a186e5056289252727521ebf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "summary": {
                                        "type": "string",
                                        "example": "I am a passionate artist.",
                                        "nullable": true
                                    },
                                    "social_media_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://instagram.com/johndoe",
                                        "nullable": true
                                    },
                                    "portfolio_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://portfolio.com/johndoe",
                                        "nullable": true
                                    },
                                    "website_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://johndoe.com",
                                        "nullable": true
                                    },
                                    "other_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://other.com/johndoe",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "About Me updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "About me updated successfully."
                                        },
                                        "artistDetails": {
                                            "$ref": "#/components/schemas/ArtistDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/pickup-location": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the artist's pickup location",
                "operationId": "8377b0363078921fed9e48a42e1f25eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city",
                                    "address"
                                ],
                                "properties": {
                                    "city": {
                                        "type": "string",
                                        "example": "Cairo"
                                    },
                                    "zone": {
                                        "type": "string",
                                        "example": "Downtown",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pickup location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pick-up location added successfully."
                                        },
                                        "pickup_location": {
                                            "$ref": "#/components/schemas/ArtistPickupLocation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/focus": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Get the artist's focus tags and available categories",
                "operationId": "0dd30bfb5a9f3377c05e0a3ec20f56f8",
                "responses": {
                    "200": {
                        "description": "Focus and categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "user_tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the artist's focus tags",
                "operationId": "36d6f4970ced49730fb5e6506bb5510b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Focus updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Focus updated successfully."
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/cover-image": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the artist's cover image",
                "operationId": "cd7175e264aebe5a8993b75baa9dfb0c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cover_img": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cover image updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cover image updated successfully."
                                        },
                                        "cover_img": {
                                            "type": "string",
                                            "format": "url",
                                            "example": "https://example.com/cover.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/my-orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get the list of orders associated with the artist",
                "operationId": "458bd3fb5720e3d412ab4b71ae664156",
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "standard_orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Order #1"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-01"
                                                    },
                                                    "artworks_count": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "example": 500.75
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "customized_orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Customized Order #5"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-01"
                                                    },
                                                    "artwork": {
                                                        "type": "string",
                                                        "example": "Custom Portrait"
                                                    },
                                                    "desired_size": {
                                                        "type": "string",
                                                        "example": "24x36"
                                                    },
                                                    "offering_price": {
                                                        "type": "number",
                                                        "example": 750.5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "accepted"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/customized-orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get details of a specific customized order",
                "operationId": "76b3700f3b414b153a21186d4549bd36",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the customized order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customized order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customized_order_details": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Customized Order #5"
                                                },
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01 12:00:00"
                                                },
                                                "artwork_name": {
                                                    "type": "string",
                                                    "example": "Custom Portrait"
                                                },
                                                "desired_size": {
                                                    "type": "string",
                                                    "example": "24x36"
                                                },
                                                "offering_price": {
                                                    "type": "number",
                                                    "example": 750.5
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "accepted"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Special request for custom colors."
                                                },
                                                "address": {
                                                    "$ref": "#/components/schemas/Address"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Customized order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/my-orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get details of a specific standard order",
                "operationId": "c5752126d3b03c292a34b060bec7a124",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order_details": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Order #1"
                                                },
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2024-01-01 12:00:00"
                                                },
                                                "shipment_address": {
                                                    "$ref": "#/components/schemas/Address"
                                                },
                                                "payment_method": {
                                                    "type": "string",
                                                    "example": "cash"
                                                },
                                                "invoice_link": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com/invoice.pdf",
                                                    "nullable": true
                                                },
                                                "price_breakdown": {
                                                    "properties": {
                                                        "artworks_total": {
                                                            "type": "number",
                                                            "example": 750.5
                                                        },
                                                        "marasem_credit_used": {
                                                            "type": "number",
                                                            "example": 50
                                                        },
                                                        "promo_discount": {
                                                            "type": "number",
                                                            "example": 25
                                                        },
                                                        "promo_type": {
                                                            "type": "string",
                                                            "example": "fixed"
                                                        },
                                                        "final_total": {
                                                            "type": "number",
                                                            "example": 675.5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "artworks": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "image": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "example": "https://example.com/image.jpg"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Sunset Painting"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "Painting"
                                                            },
                                                            "size": {
                                                                "type": "string",
                                                                "example": "24x36"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "example": 250.5
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "available"
                                                            },
                                                            "artist": {
                                                                "$ref": "#/components/schemas/User"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/available-balance": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Get the artist's available Marasem Credit balance and transactions",
                "operationId": "8cd7e880701695ed64be1bb3e1abd866",
                "responses": {
                    "200": {
                        "description": "Balance and transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "marasem_credit": {
                                            "type": "number",
                                            "example": 500
                                        },
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "debit"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "example": 50
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "example": "Order #1"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Payment for Order #1"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2024-01-01 12:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artworks": {
            "get": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Fetch artworks with pagination and liked status",
                "operationId": "723644476e25a2bb0ffe3780decd0c2a",
                "parameters": [
                    {
                        "name": "artwork_id",
                        "in": "query",
                        "description": "ID of a specific artwork to fetch",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination offset (default is 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination limit (default is 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artworks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "has_more": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artwork not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Create a new artwork",
                "operationId": "79114af6408f58c1bad3e8c613dd7c78",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "art_type",
                                    "artwork_status",
                                    "sizes",
                                    "prices",
                                    "description",
                                    "customizable"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sunset Painting"
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "art_type": {
                                        "type": "string",
                                        "example": "Painting"
                                    },
                                    "artwork_status": {
                                        "type": "string",
                                        "example": "Available"
                                    },
                                    "sizes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "24x36"
                                        }
                                    },
                                    "prices": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 200.5
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A beautiful sunset painting."
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "collections": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "customizable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "duration": {
                                        "description": "Required if customizable is true",
                                        "type": "string",
                                        "example": "7 days",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Artwork created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artwork created successfully."
                                        },
                                        "artwork": {
                                            "$ref": "#/components/schemas/Artwork"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Sizes and prices mismatch or other validation error"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/collections-tags": {
            "get": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Get collections and tags with their usage count",
                "operationId": "a8fec9535fa7beb6555d12f92932569d",
                "responses": {
                    "200": {
                        "description": "Collections and tags fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "collections": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Collection"
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artworks/{id}": {
            "get": {
                "tags": [
                    "Artworks"
                ],
                "summary": "View a specific artwork",
                "operationId": "4ace6e276c6a3e2c97e05ecbfc769f28",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artwork to view",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artwork details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artwork"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artwork not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Update an existing artwork",
                "operationId": "79546c225ef43d084e8e10b893f2c17e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artwork to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sunset Painting",
                                        "nullable": true
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "art_type": {
                                        "type": "string",
                                        "example": "Painting",
                                        "nullable": true
                                    },
                                    "artwork_status": {
                                        "type": "string",
                                        "example": "Available",
                                        "nullable": true
                                    },
                                    "sizes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "24x36"
                                        }
                                    },
                                    "prices": {
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 200.5
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A beautiful sunset painting.",
                                        "nullable": true
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "collections": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "customizable": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "duration": {
                                        "description": "Required if customizable is true",
                                        "type": "string",
                                        "example": "7 days",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artwork updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artwork updated successfully."
                                        },
                                        "artwork": {
                                            "$ref": "#/components/schemas/Artwork"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to update this artwork"
                    },
                    "404": {
                        "description": "Artwork not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Delete an artwork",
                "operationId": "0af1372e7415a63a02f74ff90306f673",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artwork to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artwork deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artwork deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete this artwork"
                    },
                    "404": {
                        "description": "Artwork not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artworks/{id}/like": {
            "post": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Like an artwork",
                "operationId": "9dac56176d45662d8cd950437949f633",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artwork to like",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Artwork liked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Liked successfully"
                                        },
                                        "likes_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artwork not found"
                    },
                    "400": {
                        "description": "Already liked"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Artworks"
                ],
                "summary": "Unlike an artwork",
                "operationId": "579ce77e802dcd12914013b29dc9fd3a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artwork to unlike",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artwork unliked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unliked successfully"
                                        },
                                        "likes_count": {
                                            "type": "integer",
                                            "example": 4
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artwork or like not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "a0bad38435a32b5ad173da486ba8f59d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Required if email is not provided.",
                                        "type": "string",
                                        "example": "1234567890",
                                        "nullable": true
                                    },
                                    "country_code": {
                                        "description": "Required if using phone for login.",
                                        "type": "string",
                                        "example": "+1",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "sample-jwt-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "fe1c1eca634ba2811908fec5e5183950",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP to email or phone",
                "operationId": "14eabb74326c85de388f1c3d87debf91",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "type"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Email or phone number.",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "type": {
                                        "description": "Specify the type of identifier.",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ],
                                        "example": "email"
                                    },
                                    "country_code": {
                                        "description": "Required if type is phone.",
                                        "type": "string",
                                        "example": "+1",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "404": {
                        "description": "No account found"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password using OTP",
                "operationId": "cd2ee5226ba78b28b93c3c61467c92e6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identifier",
                                    "type",
                                    "otp",
                                    "new_password"
                                ],
                                "properties": {
                                    "identifier": {
                                        "description": "Email or phone number.",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "type": {
                                        "description": "Specify the type of identifier.",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ],
                                        "example": "email"
                                    },
                                    "country_code": {
                                        "description": "Required if type is phone.",
                                        "type": "string",
                                        "example": "+1",
                                        "nullable": true
                                    },
                                    "otp": {
                                        "description": "4-digit OTP sent to email or phone.",
                                        "type": "string",
                                        "example": "1234"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "sample-jwt-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "OTP expired"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "Register a new user",
                "operationId": "6cb93c5db517a3e6e369c44ede7f22fd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "phone",
                                    "country_code"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "pattern": "^[0-9]{7,15}$",
                                        "example": "1234567890"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "pattern": "^\\\\+\\\\d{1,4}$",
                                        "example": "+1"
                                    },
                                    "is_artist": {
                                        "description": "Optional. Indicates if the user is an artist.",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "is_artist": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "sample-jwt-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/add-social-media-links": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "Add social media links for the user",
                "operationId": "a070cfba95e6efb697a1069f08f780d9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "social_media_link",
                                    "portfolio_link"
                                ],
                                "properties": {
                                    "social_media_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://twitter.com/user"
                                    },
                                    "portfolio_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://portfolio.com/user"
                                    },
                                    "website_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://website.com",
                                        "nullable": true
                                    },
                                    "other_link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://other.com",
                                        "nullable": true
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "Artist specialized in digital art.",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Social media links added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Social media links added successfully."
                                        },
                                        "artistDetail": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid step"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/get-categories": {
            "get": {
                "tags": [
                    "Registration"
                ],
                "summary": "Fetch all categories",
                "operationId": "57cfce92ed141d7357bb852d3598e931",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Painting"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/choose-categories": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "Choose categories for the user",
                "operationId": "325241fc9fceca51db665c07af5ece56",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categories chosen successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories chosen successfully."
                                        },
                                        "artistDetail": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid step"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/add-pickup-location": {
            "post": {
                "tags": [
                    "Registration"
                ],
                "summary": "Add pickup location for the user",
                "operationId": "f9798fadfab322baff88a81928d1043c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city",
                                    "zone",
                                    "address"
                                ],
                                "properties": {
                                    "city": {
                                        "type": "string",
                                        "example": "Cairo"
                                    },
                                    "zone": {
                                        "type": "string",
                                        "example": "Downtown"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Cairo"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pickup location added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pickup location added successfully."
                                        },
                                        "artistDetail": {
                                            "type": "object"
                                        },
                                        "address": {
                                            "properties": {
                                                "city": {
                                                    "type": "string",
                                                    "example": "Cairo"
                                                },
                                                "zone": {
                                                    "type": "string",
                                                    "example": "Downtown"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St, Cairo"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid step"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login/{provider}/redirect": {
            "get": {
                "tags": [
                    "Social Login"
                ],
                "summary": "Redirect to social login provider",
                "operationId": "0db6ac4ad0df425956924f486b7afd0e",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "The social login provider (e.g., google, facebook, behance)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "behance"
                            ]
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects the user to the social provider's login page"
                    },
                    "500": {
                        "description": "Error in redirecting to provider"
                    }
                }
            }
        },
        "/login/{provider}/callback": {
            "get": {
                "tags": [
                    "Social Login"
                ],
                "summary": "Handle the social login callback",
                "operationId": "a9987d83816b7917eaaa6edf08d91dd6",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "The social login provider (e.g., google, facebook, behance)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "facebook",
                                "behance"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "sample-jwt-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No account found with this email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No account found with this email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to login"
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get all items in the user's cart",
                "operationId": "1e14cc41d8b7d6fe2fa8fcdc5b216330",
                "responses": {
                    "200": {
                        "description": "List of items in the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cart_items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "artwork_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "size": {
                                                        "type": "string",
                                                        "example": "24x36"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "example": 200.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "items_count": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 601.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add an item to the cart",
                "operationId": "92a0966476517dddddd69687a29bed25",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "artwork_id",
                                    "size"
                                ],
                                "properties": {
                                    "artwork_id": {
                                        "description": "ID of the artwork to add",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "size": {
                                        "description": "Selected size of the artwork",
                                        "type": "string",
                                        "example": "24x36"
                                    },
                                    "quantity": {
                                        "description": "Quantity of the artwork to add",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item added to cart successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to add to cart."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid size selected"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove an item from the cart",
                "operationId": "a0bff2234b29f39f3dd7823e81a9db51",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "artwork_id"
                                ],
                                "properties": {
                                    "artwork_id": {
                                        "description": "ID of the artwork to remove",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "size": {
                                        "description": "Size of the artwork to remove",
                                        "type": "string",
                                        "example": "24x36",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item removed from cart successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Item not found in cart"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/checkout": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get checkout data including cart items, discounts, and addresses",
                "operationId": "d42d23166d2c60e9d01b92a2ae66da9b",
                "parameters": [
                    {
                        "name": "promo_code",
                        "in": "query",
                        "description": "Optional promo code to apply for discount",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "WELCOME10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkout data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items_count": {
                                            "description": "Total number of items in the cart",
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "total": {
                                            "description": "Total amount before discounts and credits",
                                            "type": "number",
                                            "example": 601.5
                                        },
                                        "discount": {
                                            "description": "Discount applied from the promo code",
                                            "type": "number",
                                            "example": 50
                                        },
                                        "marasem_credit": {
                                            "description": "Marasem credit applied to the total",
                                            "type": "number",
                                            "example": 100
                                        },
                                        "addresses": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Address ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "city": {
                                                        "description": "City of the address",
                                                        "type": "string",
                                                        "example": "Cairo"
                                                    },
                                                    "zone": {
                                                        "description": "Zone or area of the address",
                                                        "type": "string",
                                                        "example": "Downtown"
                                                    },
                                                    "address": {
                                                        "description": "Detailed address",
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "is_default": {
                                                        "description": "Indicates if this is the default address",
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to proceed to checkout."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/collections": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "List all collections with their latest three artworks",
                "operationId": "7b241eefae469d00143adf95e94029b1",
                "responses": {
                    "200": {
                        "description": "Collections fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Collection ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Collection name",
                                                "type": "string",
                                                "example": "Nature Collection"
                                            },
                                            "tags": {
                                                "description": "Tags associated with the collection",
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Landscape"
                                                }
                                            },
                                            "followers": {
                                                "description": "Number of followers",
                                                "type": "integer",
                                                "example": 200
                                            },
                                            "latest_artworks": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Artwork ID",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "description": "Artwork name",
                                                            "type": "string",
                                                            "example": "Sunset Painting"
                                                        },
                                                        "images": {
                                                            "description": "Artwork images",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "https://example.com/image.jpg"
                                                            }
                                                        },
                                                        "art_type": {
                                                            "description": "Type of artwork",
                                                            "type": "string",
                                                            "example": "Painting"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/collections/{id}": {
            "get": {
                "tags": [
                    "Collections"
                ],
                "summary": "View a specific collection and its artworks",
                "operationId": "5346e26517da2213584c2e3c0ea2798c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the collection",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Collection ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Collection name",
                                            "type": "string",
                                            "example": "Nature Collection"
                                        },
                                        "tags": {
                                            "description": "Tags associated with the collection",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Landscape"
                                            }
                                        },
                                        "followers": {
                                            "description": "Number of followers",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "artwork_tags": {
                                            "description": "Unique tags from the artworks in this collection",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Sunset"
                                            }
                                        },
                                        "artworks": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Artwork ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Artwork name",
                                                        "type": "string",
                                                        "example": "Sunset Painting"
                                                    },
                                                    "images": {
                                                        "description": "Artwork images",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "https://example.com/image.jpg"
                                                        }
                                                    },
                                                    "art_type": {
                                                        "description": "Type of artwork",
                                                        "type": "string",
                                                        "example": "Painting"
                                                    },
                                                    "artist": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Collection not found"
                    }
                }
            }
        },
        "/collections/{id}/follow": {
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Follow a collection",
                "operationId": "5eb9074f0c5e37470a554588d6ccfd6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the collection to follow",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection followed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Collection followed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "400": {
                        "description": "Already following the collection"
                    },
                    "404": {
                        "description": "Collection not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/collections/{id}/unfollow": {
            "post": {
                "tags": [
                    "Collections"
                ],
                "summary": "Unfollow a collection",
                "operationId": "d4f0344818d3a5f90ae5afde272b2eb4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the collection to unfollow",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection unfollowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Collection unfollowed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "400": {
                        "description": "Not following the collection"
                    },
                    "404": {
                        "description": "Collection not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve a list of upcoming events",
                "operationId": "e43d73e90b9e7bdd56c9dcad65ef30f8",
                "responses": {
                    "200": {
                        "description": "List of events retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Event ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "description": "Event title",
                                                "type": "string",
                                                "example": "Art Exhibition 2024"
                                            },
                                            "description": {
                                                "description": "Event description",
                                                "type": "string",
                                                "example": "A showcase of modern art."
                                            },
                                            "date_start": {
                                                "description": "Start date of the event",
                                                "type": "string",
                                                "format": "date",
                                                "example": "2024-03-15"
                                            },
                                            "date_end": {
                                                "description": "End date of the event",
                                                "type": "string",
                                                "format": "date",
                                                "example": "2024-03-18",
                                                "nullable": true
                                            },
                                            "time_start": {
                                                "description": "Start time of the event",
                                                "type": "string",
                                                "format": "time",
                                                "example": "10:00:00",
                                                "nullable": true
                                            },
                                            "time_end": {
                                                "description": "End time of the event",
                                                "type": "string",
                                                "format": "time",
                                                "example": "18:00:00",
                                                "nullable": true
                                            },
                                            "location": {
                                                "description": "Event location",
                                                "type": "string",
                                                "example": "Downtown Art Gallery"
                                            },
                                            "location_url": {
                                                "description": "Google Maps link to the location",
                                                "type": "string",
                                                "format": "url",
                                                "example": "https://maps.google.com?q=downtown-art-gallery",
                                                "nullable": true
                                            },
                                            "cover_img_path": {
                                                "description": "URL to the event cover image",
                                                "type": "string",
                                                "format": "url",
                                                "example": "https://example.com/event-cover.jpg",
                                                "nullable": true
                                            },
                                            "status": {
                                                "description": "Status of the event",
                                                "type": "string",
                                                "example": "active"
                                            },
                                            "expires": {
                                                "description": "Expiration date of the event, if applicable",
                                                "type": "string",
                                                "format": "date",
                                                "example": "2024-03-19",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/filters": {
            "get": {
                "tags": [
                    "Filters"
                ],
                "summary": "Get available filters for artworks",
                "operationId": "dab2d1715052bf841e24182a5b4b44cf",
                "responses": {
                    "200": {
                        "description": "Filters fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Painting"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Landscape"
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Painting"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Cairo"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/filters/apply": {
            "post": {
                "tags": [
                    "Filters"
                ],
                "summary": "Apply filters to fetch artworks",
                "operationId": "d863f860b5ba55568db81476b4a02045",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "location": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Cairo"
                                        }
                                    },
                                    "price_from": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "price_to": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "sort_by": {
                                        "type": "string",
                                        "enum": [
                                            "best_selling",
                                            "most_liked",
                                            "price_low_to_high",
                                            "price_high_to_low"
                                        ],
                                        "example": "most_liked"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Filtered artworks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Artwork"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "Filters"
                ],
                "summary": "Search for artworks by name or description",
                "operationId": "8d1430d2630c40e02168633142c358fe",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for artwork name or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "sunset"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Pagination offset",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Pagination limit",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results with pagination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "has_more": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Place a new order",
                "operationId": "848a5cedbc2597d26606bf452305f526",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address_id",
                                    "amount",
                                    "payment_method"
                                ],
                                "properties": {
                                    "address_id": {
                                        "description": "ID of the address for delivery",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "description": "Final total amount of the order after discounts and credits",
                                        "type": "number",
                                        "format": "float",
                                        "example": 200.5
                                    },
                                    "payment_method": {
                                        "description": "Payment method",
                                        "type": "string",
                                        "enum": [
                                            "cash",
                                            "paymob"
                                        ],
                                        "example": "cash"
                                    },
                                    "promo_code": {
                                        "description": "Optional promo code for discount",
                                        "type": "string",
                                        "example": "WELCOME10",
                                        "nullable": true
                                    },
                                    "use_marasem_credit": {
                                        "description": "Optional flag to use available Marasem credit",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order placed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order placed successfully. Payment is cash on delivery."
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to place an order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid total amount or promo code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid total amount. Expected 190.50"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Payment intention creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create payment intention."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/custom-order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Place a customized order",
                "operationId": "a709832b96d9720a166cd9b8dcf7713b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "artwork_id",
                                    "desired_size",
                                    "offering_price",
                                    "address_id"
                                ],
                                "properties": {
                                    "artwork_id": {
                                        "description": "ID of the artwork for customization",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "desired_size": {
                                        "description": "Desired size of the artwork",
                                        "type": "string",
                                        "example": "36x48"
                                    },
                                    "offering_price": {
                                        "description": "Offered price for customization",
                                        "type": "number",
                                        "format": "float",
                                        "example": 300
                                    },
                                    "address_id": {
                                        "description": "ID of the address for delivery",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "I want this artwork in a larger size.",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customized order placed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customized order submitted successfully."
                                        },
                                        "customized_order": {
                                            "$ref": "#/components/schemas/CustomizedOrder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/customized-orders": {
            "get": {
                "tags": [
                    "Artist Orders"
                ],
                "summary": "View customized orders for the artist",
                "operationId": "65a62d155e66eaf5a27dac284e923ce5",
                "responses": {
                    "200": {
                        "description": "Customized orders fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomizedOrder"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "View user orders",
                "operationId": "e839338683dd8da916e63d73f8cbf24e",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Specific order ID to view details",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/orders": {
            "get": {
                "tags": [
                    "Artist Orders"
                ],
                "summary": "View orders containing the artist's artworks",
                "operationId": "8d8369b86986014d941e012d20fac437",
                "responses": {
                    "200": {
                        "description": "Orders for the artist fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "order_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "artwork_name": {
                                                            "type": "string",
                                                            "example": "Sunset Painting"
                                                        },
                                                        "size": {
                                                            "type": "string",
                                                            "example": "24x36"
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "example": 200.5
                                                        },
                                                        "total": {
                                                            "type": "number",
                                                            "example": 401
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "items_count": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "total": {
                                                "type": "number",
                                                "example": 1200.5
                                            },
                                            "invoice_path": {
                                                "type": "string",
                                                "example": "/invoices/12345.pdf"
                                            },
                                            "selected_address": {
                                                "$ref": "#/components/schemas/Address"
                                            },
                                            "payment_method": {
                                                "type": "string",
                                                "example": "cash"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "403": {
                        "description": "Access restricted to artists only"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/validate-promocode": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Validate a promo code",
                "operationId": "01efc99679153a1b89966b60f55ab568",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "promo_code"
                                ],
                                "properties": {
                                    "promo_code": {
                                        "description": "The promo code to validate",
                                        "type": "string",
                                        "example": "WELCOME10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo code is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "promo_code": {
                                            "description": "The validated promo code",
                                            "type": "string",
                                            "example": "WELCOME10"
                                        },
                                        "discount_type": {
                                            "description": "The type of discount (e.g., fixed or percentage)",
                                            "type": "string",
                                            "example": "percentage"
                                        },
                                        "discount_value": {
                                            "description": "The value of the discount",
                                            "type": "number",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promo code not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid promo code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Promo code is invalid or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Promo code is not valid or has expired."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/paymob/processed-callback": {
            "post": {
                "tags": [
                    "Paymob"
                ],
                "summary": "Handle the transaction processed callback from Paymob",
                "operationId": "71f02efd7ddf157c4fb5981e9e99d64d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Callback type",
                                        "type": "string",
                                        "example": "TRANSACTION"
                                    },
                                    "obj": {
                                        "description": "Transaction data",
                                        "properties": {
                                            "order": {
                                                "properties": {
                                                    "merchant_order_id": {
                                                        "description": "Merchant order ID",
                                                        "type": "string",
                                                        "example": "order-123"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "id": {
                                                "description": "Transaction ID",
                                                "type": "integer",
                                                "example": 456789
                                            },
                                            "success": {
                                                "description": "Transaction success status",
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "amount_cents": {
                                                "description": "Transaction amount in cents",
                                                "type": "integer",
                                                "example": 10000
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "hmac": {
                                        "description": "HMAC for validation",
                                        "type": "string",
                                        "example": "calculated-hmac-value"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Callback processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "processed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid HMAC",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid HMAC."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Transaction data missing or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Transaction data missing."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paymob/response-callback": {
            "get": {
                "tags": [
                    "Paymob"
                ],
                "summary": "Handle the transaction response callback from Paymob",
                "operationId": "0d10a9ecad4f68e5f9e7cbddfb917f94",
                "parameters": [
                    {
                        "name": "merchant_order_id",
                        "in": "query",
                        "description": "Merchant order ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "order-123"
                        }
                    },
                    {
                        "name": "success",
                        "in": "query",
                        "description": "Payment success status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "example": "true"
                        }
                    },
                    {
                        "name": "hmac",
                        "in": "query",
                        "description": "HMAC for validation",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "calculated-hmac-value"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirects to success or error page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Redirecting..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid HMAC",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid HMAC."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/change-currency": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change the user's preferred currency",
                "operationId": "7ca0eff68aca032af6e2abfe6b46dea7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "currency"
                                ],
                                "properties": {
                                    "currency": {
                                        "description": "The 3-letter currency code to set as preferred currency.",
                                        "type": "string",
                                        "example": "USD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Currency updated successfully."
                                        },
                                        "preferred_currency": {
                                            "description": "The updated preferred currency.",
                                            "type": "string",
                                            "example": "USD"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to change currency."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/artist/profile": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Fetch the logged-in artist's profile and insights",
                "operationId": "51a6dcb16273ee672a3565c710dbab9f",
                "responses": {
                    "200": {
                        "description": "Artist profile fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "artist": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "drafts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "to_do": {
                                            "type": "object"
                                        },
                                        "liked_artworks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artwork"
                                            }
                                        },
                                        "insights": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/profile-picture": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update the user's profile picture",
                "operationId": "76e08c39a6e424a0476c3e097d7f0d8b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "profile_picture": {
                                        "description": "Image file for the profile picture.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture updated successfully."
                                        },
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "https://example.com/profile.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/info": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Fetch the logged-in user's profile information",
                "operationId": "4f906cded95312491c79c9894adea598",
                "responses": {
                    "200": {
                        "description": "User info fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "followed_artists": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "addresses": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        },
                                        "orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "followed_collections": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Collection"
                                            }
                                        },
                                        "credit_transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CreditTransaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update the logged-in user's profile information",
                "operationId": "1e97ba4bfea198e664de34b0dbdd4295",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "country_code",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "example": "+1"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully."
                                        },
                                        "user": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve the list of orders for the logged-in user",
                "operationId": "f8c3d494cfcf613727f8755b957a220f",
                "responses": {
                    "200": {
                        "description": "List of standard and customized orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "standard_orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Order #1"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "example": "2023-12-20"
                                                    },
                                                    "artworks_count": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "example": 250.75
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "customized_orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Customized Order #5"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "example": "2023-12-21"
                                                    },
                                                    "artwork": {
                                                        "type": "string",
                                                        "example": "Sunset Painting"
                                                    },
                                                    "desired_size": {
                                                        "type": "string",
                                                        "example": "24x36"
                                                    },
                                                    "offering_price": {
                                                        "type": "number",
                                                        "example": 300
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve details of a specific order",
                "operationId": "d55a2c05bef923666c72ebe82cd72841",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID to fetch details for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order_details": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Order #1"
                                                },
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "example": "2023-12-20 14:32:00"
                                                },
                                                "shipment_address": {
                                                    "$ref": "#/components/schemas/Address"
                                                },
                                                "payment_method": {
                                                    "type": "string",
                                                    "example": "cash"
                                                },
                                                "invoice_link": {
                                                    "type": "string",
                                                    "example": "https://example.com/invoice.pdf"
                                                },
                                                "price_breakdown": {
                                                    "properties": {
                                                        "artworks_total": {
                                                            "type": "number",
                                                            "example": 250
                                                        },
                                                        "marasem_credit_used": {
                                                            "type": "number",
                                                            "example": 10
                                                        },
                                                        "promo_discount": {
                                                            "type": "number",
                                                            "example": 20
                                                        },
                                                        "promo_type": {
                                                            "type": "string",
                                                            "example": "fixed"
                                                        },
                                                        "final_total": {
                                                            "type": "number",
                                                            "example": 220
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "artworks": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://example.com/artwork.jpg"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Abstract Art"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "Painting"
                                                            },
                                                            "size": {
                                                                "type": "string",
                                                                "example": "24x36"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "example": 125
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "ready to ship"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/customized-orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve details of a specific customized order",
                "operationId": "620288790f9210e25402e84bbe89f42a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customized order ID to fetch details for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customized order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customized_order_details": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Customized Order #5"
                                                },
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "example": "2023-12-21 10:15:00"
                                                },
                                                "artwork_name": {
                                                    "type": "string",
                                                    "example": "Sunset Painting"
                                                },
                                                "desired_size": {
                                                    "type": "string",
                                                    "example": "24x36"
                                                },
                                                "offering_price": {
                                                    "type": "number",
                                                    "example": 300
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "I want a larger version of this painting."
                                                },
                                                "address": {
                                                    "$ref": "#/components/schemas/Address"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Customized order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Customized order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "required": [
                    "user_id",
                    "city",
                    "zone",
                    "address"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the address",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user associated with the address",
                        "type": "integer",
                        "example": 5
                    },
                    "city": {
                        "description": "The city of the address",
                        "type": "string",
                        "example": "Cairo"
                    },
                    "zone": {
                        "description": "The zone of the address",
                        "type": "string",
                        "example": "Downtown"
                    },
                    "address": {
                        "description": "The detailed address",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "phone": {
                        "description": "Phone number for the address",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "country_code": {
                        "description": "Country code for the address's phone",
                        "type": "string",
                        "example": "+20"
                    },
                    "name": {
                        "description": "Custom name for the address",
                        "type": "string",
                        "example": "John's Office"
                    },
                    "is_default": {
                        "description": "Indicates if this is the default address",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "ArtistDetail": {
                "required": [
                    "user_id",
                    "registration_step",
                    "completed"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the artist details",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user associated with the artist details",
                        "type": "integer",
                        "example": 5
                    },
                    "social_media_link": {
                        "description": "The artist's social media link",
                        "type": "string",
                        "example": "https://instagram.com/artist",
                        "nullable": true
                    },
                    "portfolio_link": {
                        "description": "The artist's portfolio link",
                        "type": "string",
                        "example": "https://portfolio.com",
                        "nullable": true
                    },
                    "website_link": {
                        "description": "The artist's website link",
                        "type": "string",
                        "example": "https://website.com",
                        "nullable": true
                    },
                    "other_link": {
                        "description": "Other links related to the artist",
                        "type": "string",
                        "example": "https://example.com",
                        "nullable": true
                    },
                    "summary": {
                        "description": "A summary about the artist",
                        "type": "string",
                        "example": "Experienced artist specializing in watercolor paintings.",
                        "nullable": true
                    },
                    "registration_step": {
                        "description": "The current registration step for the artist",
                        "type": "integer",
                        "example": 2
                    },
                    "completed": {
                        "description": "Indicates if the artist registration is completed",
                        "type": "boolean",
                        "example": false
                    },
                    "profile_views": {
                        "description": "The number of views on the artist's profile",
                        "type": "integer",
                        "example": 200
                    },
                    "appreciations_count": {
                        "description": "The number of appreciations received by the artist",
                        "type": "integer",
                        "example": 50
                    }
                },
                "type": "object"
            },
            "ArtworkLike": {
                "required": [
                    "user_id",
                    "artwork_id"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the artwork like",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user who liked the artwork",
                        "type": "integer",
                        "example": 5
                    },
                    "artwork_id": {
                        "description": "The ID of the liked artwork",
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "required": [
                    "user_id",
                    "artwork_id",
                    "size",
                    "price",
                    "quantity"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the cart item",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user who owns the cart item",
                        "type": "integer",
                        "example": 5
                    },
                    "artwork_id": {
                        "description": "The ID of the artwork in the cart",
                        "type": "integer",
                        "example": 10
                    },
                    "size": {
                        "description": "The selected size for the artwork",
                        "type": "string",
                        "example": "24x36"
                    },
                    "price": {
                        "description": "The price of the artwork for the selected size",
                        "type": "number",
                        "format": "float",
                        "example": 200.5
                    },
                    "quantity": {
                        "description": "The quantity of the artwork in the cart",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "CustomizedOrder": {
                "required": [
                    "user_id",
                    "artwork_id",
                    "desired_size",
                    "offering_price",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the customized order",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user who created the order",
                        "type": "integer",
                        "example": 5
                    },
                    "artwork_id": {
                        "description": "The ID of the artwork for the order",
                        "type": "integer",
                        "example": 10
                    },
                    "desired_size": {
                        "description": "The desired size for the artwork",
                        "type": "string",
                        "example": "36x48"
                    },
                    "offering_price": {
                        "description": "The price offered for the custom order",
                        "type": "number",
                        "format": "float",
                        "example": 300.75
                    },
                    "address_id": {
                        "description": "The ID of the delivery address",
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "description": {
                        "description": "Additional description for the order",
                        "type": "string",
                        "example": "I would like the artwork to have a sunset theme.",
                        "nullable": true
                    },
                    "status": {
                        "description": "The status of the order",
                        "type": "string",
                        "example": "Pending"
                    }
                },
                "type": "object"
            },
            "Category": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the category",
                        "type": "string",
                        "example": "Painting"
                    }
                },
                "type": "object"
            },
            "Event": {
                "required": [
                    "title",
                    "date_start",
                    "time_start",
                    "location"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the event",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The title of the event",
                        "type": "string",
                        "example": "Art Exhibition"
                    },
                    "description": {
                        "description": "A detailed description of the event",
                        "type": "string",
                        "example": "A gallery exhibition for emerging artists.",
                        "nullable": true
                    },
                    "date_start": {
                        "description": "The starting date of the event",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "date_end": {
                        "description": "The ending date of the event",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-18",
                        "nullable": true
                    },
                    "time_start": {
                        "description": "The starting time of the event",
                        "type": "string",
                        "format": "time",
                        "example": "10:00"
                    },
                    "time_end": {
                        "description": "The ending time of the event",
                        "type": "string",
                        "format": "time",
                        "example": "18:00",
                        "nullable": true
                    },
                    "location": {
                        "description": "The location of the event",
                        "type": "string",
                        "example": "Art Gallery, Downtown"
                    },
                    "location_url": {
                        "description": "Google Maps link for the event location",
                        "type": "string",
                        "format": "url",
                        "example": "https://maps.google.com",
                        "nullable": true
                    },
                    "cover_img_path": {
                        "description": "Cover image for the event",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/cover.jpg",
                        "nullable": true
                    },
                    "status": {
                        "description": "The status of the event",
                        "type": "string",
                        "example": "Upcoming"
                    },
                    "expires": {
                        "description": "Indicates if the event has expired",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "required": [
                    "order_id",
                    "invoice_number",
                    "amount",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the invoice",
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "description": "The ID of the order associated with the invoice",
                        "type": "integer",
                        "example": 10
                    },
                    "invoice_number": {
                        "description": "The unique invoice number",
                        "type": "string",
                        "example": "INV-1001"
                    },
                    "amount": {
                        "description": "The total amount for the invoice",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "status": {
                        "description": "The payment status of the invoice",
                        "type": "string",
                        "example": "Paid"
                    },
                    "path": {
                        "description": "The file path to the invoice document",
                        "type": "string",
                        "example": "/invoices/invoice-1001.pdf",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "id",
                    "user_id",
                    "total_amount",
                    "status",
                    "order_status"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the order",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user who placed the order",
                        "type": "integer",
                        "example": 1
                    },
                    "address_id": {
                        "description": "ID of the address associated with the order",
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "total_amount": {
                        "description": "Total amount of the order",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "status": {
                        "description": "Payment status of the order",
                        "type": "string",
                        "example": "pending"
                    },
                    "order_status": {
                        "description": "Overall status of the order (e.g., processing, completed)",
                        "type": "string",
                        "example": "processing"
                    },
                    "promo_code_id": {
                        "description": "ID of the applied promo code",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "original_total": {
                        "description": "Original total amount before applying discounts",
                        "type": "number",
                        "format": "float",
                        "example": 200,
                        "nullable": true
                    },
                    "marasem_credit_used": {
                        "description": "Amount of Marasem credit used",
                        "type": "number",
                        "format": "float",
                        "example": 50,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the order was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the order was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "PromoCode": {
                "required": [
                    "id",
                    "code",
                    "status",
                    "discount_type",
                    "discount_value"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the promo code",
                        "type": "integer",
                        "example": 1
                    },
                    "code": {
                        "description": "Promo code",
                        "type": "string",
                        "example": "WELCOME10"
                    },
                    "usages": {
                        "description": "Number of times the promo code has been used",
                        "type": "integer",
                        "example": 10
                    },
                    "status": {
                        "description": "Status of the promo code (e.g., active, expired)",
                        "type": "string",
                        "example": "active"
                    },
                    "max_usages": {
                        "description": "Maximum number of times the promo code can be used",
                        "type": "integer",
                        "example": 100
                    },
                    "expiry_date": {
                        "description": "Expiry date of the promo code",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31",
                        "nullable": true
                    },
                    "discount_type": {
                        "description": "Type of discount applied by the promo code",
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_value": {
                        "description": "Value of the discount (percentage or fixed amount)",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "created_at": {
                        "description": "Timestamp when the promo code was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the promo code was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "required": [
                    "order_id",
                    "artwork_id",
                    "size",
                    "quantity",
                    "price"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the order item",
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "description": "The ID of the order associated with the item",
                        "type": "integer",
                        "example": 5
                    },
                    "artwork_id": {
                        "description": "The ID of the artwork in the order",
                        "type": "integer",
                        "example": 10
                    },
                    "size": {
                        "description": "The size of the artwork in the order",
                        "type": "string",
                        "example": "24x36"
                    },
                    "quantity": {
                        "description": "The quantity of the artwork in the order",
                        "type": "integer",
                        "example": 2
                    },
                    "price": {
                        "description": "The price per unit of the artwork",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    }
                },
                "type": "object"
            },
            "PasswordResetToken": {
                "required": [
                    "email",
                    "token",
                    "expired_at",
                    "type"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the password reset token",
                        "type": "integer",
                        "example": 1
                    },
                    "email": {
                        "description": "The email address associated with the token",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "token": {
                        "description": "The hashed reset token",
                        "type": "string",
                        "example": "abc123xyz"
                    },
                    "expired_at": {
                        "description": "The expiry date and time of the token",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "type": {
                        "description": "The type of reset (e.g., email or phone)",
                        "type": "string",
                        "example": "email"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "required": [
                    "order_id",
                    "method",
                    "amount",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the payment",
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "description": "The ID of the order associated with the payment",
                        "type": "integer",
                        "example": 5
                    },
                    "method": {
                        "description": "The payment method used",
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "amount": {
                        "description": "The total amount of the payment",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "status": {
                        "description": "The status of the payment",
                        "type": "string",
                        "example": "Successful"
                    },
                    "extra_data": {
                        "description": "Additional information about the payment",
                        "type": "string",
                        "example": "Transaction approved by bank",
                        "nullable": true
                    },
                    "transaction_id": {
                        "description": "The unique transaction identifier from the payment gateway",
                        "type": "string",
                        "example": "TXN12345"
                    }
                },
                "type": "object"
            },
            "SocialLogin": {
                "required": [
                    "user_id",
                    "provider",
                    "provider_id"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the social login",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user associated with the social login",
                        "type": "integer",
                        "example": 5
                    },
                    "provider": {
                        "description": "The name of the social provider (e.g., google, facebook, behance)",
                        "type": "string",
                        "example": "google"
                    },
                    "provider_id": {
                        "description": "The unique identifier of the user from the social provider",
                        "type": "string",
                        "example": "1234567890"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "required": [
                    "id",
                    "name",
                    "category_id"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the tag",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the tag",
                        "type": "string",
                        "example": "Landscape"
                    },
                    "category_id": {
                        "description": "The ID of the category the tag belongs to",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "email",
                    "phone",
                    "country_code"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "description": "The user's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "The user's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "The user's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "The user's phone number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "country_code": {
                        "description": "The country code of the user's phone number",
                        "type": "string",
                        "example": "+1"
                    },
                    "profile_picture": {
                        "description": "URL to the user's profile picture",
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/profile.jpg",
                        "nullable": true
                    },
                    "preferred_currency": {
                        "description": "The user's preferred currency",
                        "type": "string",
                        "example": "USD",
                        "nullable": true
                    },
                    "marasem_credit": {
                        "description": "Marasem credit balance of the user",
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "created_at": {
                        "description": "Timestamp when the user was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the user was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-10T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "Artwork": {
                "required": [
                    "id",
                    "artist_id",
                    "name",
                    "photos",
                    "art_type",
                    "artwork_status",
                    "sizes_prices",
                    "description",
                    "min_price",
                    "max_price"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the artwork",
                        "type": "integer",
                        "example": 1
                    },
                    "artist_id": {
                        "description": "The ID of the artist who created the artwork",
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "description": "The name of the artwork",
                        "type": "string",
                        "example": "Sunset Painting"
                    },
                    "photos": {
                        "description": "An array of photo URLs for the artwork",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "https://example.com/photo.jpg"
                        }
                    },
                    "art_type": {
                        "description": "The type of artwork",
                        "type": "string",
                        "example": "Painting"
                    },
                    "artwork_status": {
                        "description": "The status of the artwork (e.g., Available, Sold)",
                        "type": "string",
                        "example": "Available"
                    },
                    "sizes_prices": {
                        "description": "Sizes and corresponding prices for the artwork",
                        "type": "object",
                        "example": {
                            "24x36": 200.5,
                            "30x40": 300.75
                        }
                    },
                    "description": {
                        "description": "A detailed description of the artwork",
                        "type": "string",
                        "example": "A beautiful painting of a sunset over a lake."
                    },
                    "customizable": {
                        "description": "Indicates whether the artwork can be customized",
                        "type": "boolean",
                        "example": true
                    },
                    "duration": {
                        "description": "The duration required for customization, if applicable",
                        "type": "string",
                        "example": "7 days",
                        "nullable": true
                    },
                    "likes_count": {
                        "description": "The number of likes for the artwork",
                        "type": "integer",
                        "example": 15
                    },
                    "min_price": {
                        "description": "The minimum price of the artwork",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "max_price": {
                        "description": "The maximum price of the artwork",
                        "type": "number",
                        "format": "float",
                        "example": 300
                    }
                },
                "type": "object"
            },
            "Collection": {
                "required": [
                    "id",
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the collection",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The title of the collection",
                        "type": "string",
                        "example": "Nature Collection"
                    },
                    "tags": {
                        "description": "An array of tags associated with the collection",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Landscape"
                        },
                        "nullable": true
                    },
                    "followers": {
                        "description": "The number of followers of the collection",
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "CreditTransaction": {
                "required": [
                    "user_id",
                    "type",
                    "amount",
                    "reference"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the credit transaction",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user associated with the transaction",
                        "type": "integer",
                        "example": 5
                    },
                    "type": {
                        "description": "The type of transaction (e.g., Buy, Credit)",
                        "type": "string",
                        "example": "Buy"
                    },
                    "amount": {
                        "description": "The amount of the transaction",
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "reference": {
                        "description": "The reference for the transaction",
                        "type": "string",
                        "example": "Order #123"
                    },
                    "description": {
                        "description": "Details about the transaction",
                        "type": "string",
                        "example": "Used credit for purchasing an order"
                    },
                    "expiry_date": {
                        "description": "The expiry date of the transaction, if applicable",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp when the transaction was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the transaction was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "ArtistPickupLocation": {
                "required": [
                    "artist_id",
                    "city",
                    "address"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the pickup location",
                        "type": "integer",
                        "example": 1
                    },
                    "artist_id": {
                        "description": "The ID of the artist associated with the pickup location",
                        "type": "integer",
                        "example": 5
                    },
                    "city": {
                        "description": "The city where the pickup location is located",
                        "type": "string",
                        "example": "Cairo"
                    },
                    "zone": {
                        "description": "The zone within the city for the pickup location",
                        "type": "string",
                        "example": "Downtown",
                        "nullable": true
                    },
                    "address": {
                        "description": "The full address of the pickup location",
                        "type": "string",
                        "example": "123 Main St, Cairo"
                    },
                    "created_at": {
                        "description": "Timestamp when the pickup location was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the pickup location was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T15:30:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Use your Bearer token to access secured endpoints.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Address",
            "description": "Address"
        },
        {
            "name": "Artists",
            "description": "Artists"
        },
        {
            "name": "Artist",
            "description": "Artist"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Artworks",
            "description": "Artworks"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Registration",
            "description": "Registration"
        },
        {
            "name": "Social Login",
            "description": "Social Login"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Collections",
            "description": "Collections"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Filters",
            "description": "Filters"
        },
        {
            "name": "Artist Orders",
            "description": "Artist Orders"
        },
        {
            "name": "Paymob",
            "description": "Paymob"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}